#ifndef H_BLE_HTP_PRPH_
#define H_BLE_HTP_PRPH_

#include "nimble/ble.h"
#include "modlog/modlog.h"

/* OPL GATT. Base UID is 78790000-60fe-4153-9038-a770b4d65767 */
#define GATT_OPL_UUID               0x67, 0x57, 0xd6, 0xb4, 0x70, 0xa7, 0x38, 0x90, 0x53, 0x41, 0xfe, 0x60, 0x00, 0x00, 0x79, 0x78
#define GATT_OPL_CHR_UUID_MSG       0x67, 0x57, 0xd6, 0xb4, 0x70, 0xa7, 0x38, 0x90, 0x53, 0x41, 0xfe, 0x60, 0x01, 0x00, 0x79, 0x78
#define GATT_OPL_CHR_UUID_LIST_PRG  0x67, 0x57, 0xd6, 0xb4, 0x70, 0xa7, 0x38, 0x90, 0x53, 0x41, 0xfe, 0x60, 0x02, 0x00, 0x79, 0x78
#define GATT_OPL_CHR_UUID_PROGRAM   0x67, 0x57, 0xd6, 0xb4, 0x70, 0xa7, 0x38, 0x90, 0x53, 0x41, 0xfe, 0x60, 0x03, 0x00, 0x79, 0x78

/* OTA GATT: d6f1d96d-594c-4c53-b1c6-244a1dfde6d8 */
#define GATT_OTA_UUID 0xd8, 0xe6, 0xfd, 0x1d, 0x4a, 024, 0xc6, 0xb1, 0x53, 0x4c, 0x4c, 0x59, 0x6d, 0xd9, 0xf1, 0xd6

/* OTA Control: 7ad671aa-21c0-46a4-b722-270e3ae3d830 */ 
#define GATT_OTA_CHR_CTRL 0x30, 0xd8, 0xe3, 0x3a, 0x0e, 0x27, 0x22, 0xb7, 0xa4, 0x46, 0xc0, 0x21, 0xaa, 0x71, 0xd6, 0x7a

/* OTA Data: 23408888-1f40-4cd8-9b89-ca8d45f8a5b0 */
#define GATT_OTA_CHR_DATA 0xb0, 0xa5, 0xf8, 0x45, 0x8d, 0xca, 0x89, 0x9b, 0xd8, 0x4c, 0x40, 0x1f, 0x88, 0x88, 0x40, 0x23

typedef enum {
  SVR_CHR_OTA_CONTROL_NOP,
  SVR_CHR_OTA_CONTROL_REQUEST,
  SVR_CHR_OTA_CONTROL_REQUEST_ACK,
  SVR_CHR_OTA_CONTROL_REQUEST_NAK,
  SVR_CHR_OTA_CONTROL_DONE,
  SVR_CHR_OTA_CONTROL_DONE_ACK,
  SVR_CHR_OTA_CONTROL_DONE_NAK,
} svr_chr_ota_control_val_t;

struct ble_hs_cfg;
struct ble_gatt_register_ctxt;

void gatt_svr_register_cb(struct ble_gatt_register_ctxt *ctxt, void *arg);
int gatt_svr_init(void);
void gatt_srv_start(void);

#endif